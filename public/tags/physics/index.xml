<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Physics on Jack Montgomery</title>
    <link>http://localhost:1313/tags/physics/</link>
    <description>Recent content in Physics on Jack Montgomery</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 24 Jan 2025 07:03:38 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/physics/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Solving Ordinary Differential Equation using Neural Networks</title>
      <link>http://localhost:1313/posts/solving-odes-with-neural-networks/</link>
      <pubDate>Wed, 22 Jan 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/solving-odes-with-neural-networks/</guid>
      <description>&lt;h1 id=&#34;solving-ordinary-differential-equation-using-neural-networks&#34;&gt;Solving Ordinary Differential Equation using Neural Networks&lt;/h1&gt;&#xA;&lt;p&gt;Neural networks train based on backpropogated errors signals from the training data. But what if there were some additional constraint on the results of the network that could help the training. When we consider &lt;strong&gt;physical&lt;/strong&gt; constraints on the system in order to facilitate learning in the neural network we obtain what is called &lt;strong&gt;physics informed neural networks (PINN)&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The particular use case we will consider for PINN&amp;rsquo;s is solving ordinary differential equations. This post is inspired by the the work of &lt;a href=&#34;https://arxiv.org/abs/2302.12260&#34;&gt;Hubert Baty, Leo Baty&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
